HOW TO BUILD WIRING ON YOUR FAVORITE PLATFORM


////////////////////////////////////////////////////////////////////

//// Steps for First Time Setup 


1. INSTALL DEVELOPMENT TOOLS

1a. On Windows, install Cygwin. It's downloadable from 
    www.cygwin.com or specifically: www.cygwin.com/setup.exe

** of the packages, begin with the defaults, and add:

+ subversion - used for version control

+ make, gcc-mingw, and g++ - used to build wiring.exe
  (this will also pull in gcc-core)

+ perl - use this version from cygwin, activestate or other windows 
         perl distributions have trouble

+ unzip, zip - for dealing with archives

+ included in the defaults, but make sure: coreutils, gzip, tar

+ not required but useful: 
  openssh - command line ssh client
  nano - handy/simple text editor (gnu pico ripoff)

** and be sure to leave the option selected for 'unix line endings' 

the cygwin installer is sometimes a little flakey, so it may take more 
than one try to get everything in there. in fact, it's often best to
run the installer once, and let it install all its defaults, then run 
it again, and select the items above. it's also useful to run the 
installer every few months to keep things fresh.


1b. On Mac OS X, install Apple's Developer Tools (Xcode).

    You'll also need subversion: http://subversion.tigris.org/
    Install it from Fink, Darwinports, or download as a package:
    http://metissian.com/projects/macosx/subversion/


1c. On Linux, you're pretty much on your own.. You need a pretty 
    standard development setup along with Subversion.


2. GRAB THE CODE FROM WIRING.UNIANDES.EDU.CO

As of March 1, 2007, we're no longer using CVS and have moved on to
Subversion. 

To get the code, type this from a prompt:
svn co svn://aeon.uniandes.edu.co/trunk/wiring

That part may take a while, especially for people outside the US or
who have a slow internet connection. (The JRE binaries are stored in 
SVN so that we can properly test on the exact platform/runtime setup
that we'll be releasing.)



3. BUILD IT

# now to build for the first time:
cd /path/to/wiring/build/windows

# or if you're on linux
cd /path/to/wiring/build/linux

# let's say you're into black turtlenecks and jeans
cd /path/to/wiring/build/macosx

# and then..
./make.sh

# if everything went well, you'll have no errors. (feel free to make
# suggestions for things to include here for common problems)

# then to run it
./run.sh

# each time you make a change, use make to build the thing 
# and run to get it up and running. 


////////////////////////////////////////////////////////////////////

//// Updating to the Latest Version


4a. Each time you want to update to latest version:

cd /path/to/wiring
svn update


4b. If you're getting strange errors when you try to build, especially
    if new folders have been added to the Wiring repository, remove
    your 'work' folder and rebuild. Generally, this is a good idea to 
    do whenever a new release has been made, since that will involve
    files that may have been changed (or folders that have been moved).

# get to the wiring folder
cd /path/to/wiring

# remove the work directory
cd build/yourplatform
rm -rf work

# and try again
./make.sh

Unfortunately there isn't a way to know if new folders have
since been added. but if you're getting "class not found" errors
while building, then that's a good indicator that something is
missing from a subfolder.


////////////////////////////////////////////////////////////////////

//// The Frequently Asked Question

- What about Eclipse? What about Ant? Command line sucks.

The command line stuff isn't as scary as it might initially
seem. Hopefully it's just a matter of following the instructions above
(and being patient). If not, let us know (via the discourse board)
where you have trouble so we can fix things.

We're slowly moving development over to Eclipse, which will probably
include Ant because of cross-platform dependencies. As of release 0140,
major changes are being implemented to simplify the build process, 
which should mean that we're pretty close. The environment and all
the libraries build properly with Eclipse, however we won't be 
documenting it until the dust has settled.


////////////////////////////////////////////////////////////////////


Hernando Barragan - Updated 22 July 2009
